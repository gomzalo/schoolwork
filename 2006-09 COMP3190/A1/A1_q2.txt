1. person(spiderman) ^ person(green_goblin) ^ person(wolverine) ^ person(mary_jane)
2. has_powers(green_goblin) ^ cheats(green_goblin)
3. ~fan(green_goblin, mary_jane)
4. mutant(spiderman) ^ mutant(wolverine)
5. fan(wolverine, capt_picard)
6. forall(X): person(X) ^ has_powers(X) -> mutant(X)
7. forall(X): person(X) ^ ~cheats(X) -> good(X)
8. exists(X): mutant(X) ^ ~x-man(X)
9. forall(X): good(X) ^ ~x-man(X) -> love(mary_jane, X)
10. forall(X): x-man(X) -> fan(X, capt_picard) ^ ~cheats(X)
11. forall(X): x-man(X) -> mutant(X)
12. forall(X): mutant(X) ^ fan(X, capt_picard) -> x-man(X)
13. ~cheats(spiderman) ^ ~fan(spiderman, capt_picard)

--------------------------------------

Turn to clause form:
1.	person(spiderman) ^ person(green_goblin) ^ person(wolverine) ^ person(mary_jane)
	1a.	person(spiderman)
	1b.	person(green_goblin)
	1c.	person(wolverine)
	1d.	person(mary_jane)

2.	has_powers(green_goblin) ^ cheats(green_goblin)
	2a. has_powers(green_goblin)
	2b.	cheats(green_goblin)

4.	mutant(spiderman) ^ mutant(wolverine)
	4a. mutant(spiderman)
	4b.	mutant(wolverine)

6.	forall(X): person(X) ^ has_powers(X) -> mutant(X)
	forall(X): ~(person(X) ^ has_powers(X)) v mutant(X)
	forall(X): ~person(X) v ~has_powers(X) v mutant(X)
	~person(X) v ~has_powers(X) v mutant(X)
	~person(A) v ~has_powers(A) v mutant(A)

7.	forall(X): person(X) ^ ~cheats(X) -> good(X)
	forall(X): ~(person(X) ^ ~cheats(X)) v good(X)
	forall(X): ~person(X) v cheats(X) v good(X)
	~person(X) v cheats(X) v good(X)
	~person(B) v cheats(B) v good(B)
	
8.	exists(X): mutant(X) ^ ~x-man(X)
		Skolem constant: raphael
	mutant(raphael) ^ ~x-man(raphael)
	8a.	mutant(raphael)
	8b.	~x-man(raphael)

9.	forall(X): good(X) ^ ~x-man(X) -> love(mary_jane, X)
	forall(X): ~(good(X) ^ ~x-man(X)) v love(mary_jane, X)
	forall(X): ~good(X) v x-man(X) v love(mary_jane, X)
	~good(X) v x-man(X) v love(mary_jane, X)
	~good(C) v x-man(C) v love(mary_jane, C)

10.	forall(X): x-man(X) -> fan(X, capt_picard) ^ ~cheats(X)
	forall(X): ~x-man(X) v (fan(X, capt_picard) ^ ~cheats(X))
	~x-man(X) v (fan(X, capt_picard) ^ ~cheats(X))
	(~x-man(X) v fan(X, capt_picard) ^ (~x-man(X) v ~cheats(X))
	10a.	~x-man(X) v fan(X, capt_picard)
			~x-man(D) v fan(D, capt_picard)
	10b.	~x-man(X) v ~cheats(X)
			~x-man(E) v ~cheats(E)

11.	forall(X): x-man(X) -> mutant(X)
	forall(X): ~x-man(X) v mutant(X)
	~x-man(X) v mutant(X)
	~x-man(F) v mutant(F)

12.	forall(X): mutant(X) ^ fan(X, capt_picard) -> x-man(X)
	forall(X): ~(mutant(X) ^ fan(X, capt_picard)) v x-man(X)
	forall(X): ~mutant(X) v ~fan(X, capt_picard) v x-man(X)
	~mutant(X) v ~fan(X, capt_picard) v x-man(X)
	~mutant(G) v ~fan(G, capt_picard) v x-man(G)

13.	~cheats(spiderman) ^ ~fan(spiderman, capt_picard)
	13a.	~cheats(spiderman)
	13b.	~fan(spiderman, capt_picard)

Which leaves us with (finally):

1a. person(spiderman) (from 1)
1b. person(green_goblin) (from 1)
1c. person(wolverine) (from 1)
1d. person(mary_jane) (from 1)
2a.	has_powers(green_goblin) (from 2)
2b.	cheats(green_goblin) (from 2)
3. ~fan(green_goblin, mary_jane)
4a.	mutant(spiderman) (from 4)
4b.	mutant(wolverine) (from 4)
5. fan(wolverine, capt_picard)
6. ~person(A) v ~has_powers(A) v mutant(A) (from 6)
7. ~person(B) v cheats(B) v good(B) (from 7)
8a. mutant(raphael) (from 8)
8b. ~x-man(raphael) (from 8)
9. ~good(C) v x-man(C) v love(mary_jane, C) (from 9)
10a. ~x-man(D) v fan(D, capt_picard) (from 10)
10b. ~x-man(E) v ~cheats(E) (from 10)
11. ~x-man(F) v mutant(F) (from 11)
12. ~mutant(G) v ~fan(G, capt_picard) v x-man(G) (from 12)
13a. ~cheats(spiderman) (from 13)
13b. ~fan(spiderman, capt_picard) (from 13)

--------------------------------------

i) Prove: Mary Jane loves Spiderman
ie, love(mary_jane, spiderman)

So, introduce the converse to the system:
14. ~love(mary_jane, spiderman)

Now resolve.

Resolve 9 and 14:
	15. ~good(spiderman) v x-man(spiderman)
	with the substitution {spiderman/C}

Resolve 7 and 15:
	16. ~person(spiderman) v cheats(spiderman) v x-man(spiderman)
	with the substitution {spiderman/B}
	
Resolve 1 and 16:
	17. cheats(spiderman) v x-man(spiderman)

Resolve 13a and 17:
	18. x-man(spiderman)
	
Resolve 10a and 18:
	19. fan(spiderman, capt_picard)
	with the substitution {spiderman/D}
	
Resolving 13b and 19 leaves us with nil, which means we have reached a contradiction; thus, our original hypothesis must be true!  So, Mary Jane loves Spiderman.

ii) Prove: Wolverine does not cheat
ie, ~cheats(wolverine)

So, introduce the converse to the system:
14. cheats(wolverine)

Now resolve.

Resolve 10b and 14:
	15. ~x-man(wolverine)
	with the substitution {wolverine/E}
	
Resolve 5 and 12:
	16. ~mutant(wolverine) v x-man(wolverine)
	with the substitution {wolverine/G}

Resolve 15 and 16:
	17. ~mutant(wolverine)

Resolving 4b and 17 leaves us with nil, which means we have reached a contradiction; thus, our original hypothesis must be true!  So, Wolverine does not cheat.